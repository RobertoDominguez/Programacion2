//---------------------------------------------------------------------------

#pragma hdrstop

#include "UCNaturalR.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)

#include <iostream>
using namespace std;


short NaturalR::mayorDig(int n){
	short may;
	if (n==0){
	   may=0;
	}else{
		may=mayorDig(n/10);
		short dig=n%10;
		if (dig>may){
			may=dig;
		}
	}
	return may;
}

int NaturalR::invertirNum(int n){
	int inv;
	if (n==0) {
		inv=0;
	}else{
		short dig=n%10;
		short cantDig=(short)(log((double)n)/log(10.0));
		int m=pow(10,(double)cantDig);
		inv=invertirNum(n/10)+dig*m;
	}
	return inv;
}


bool existeDigitoEnNumero(short dig,int n){
	bool existe;
	if (n==0) {
		existe=false;
	}else{
		short digAct=n%10;
		if (digAct==dig) {
			existe=true;
		}else{
			existe=existeDigitoEnNumero(dig,n/10);
	 	}
	}
	return existe;
}

int NaturalR::eliminarDigitosRepetidos(int n){
	int res;
	if (n==0) {
		res=0;
	}else{
		short dig=n%10;
		n=n/10;
		if (!existeDigitoEnNumero(dig,n)) {
			res=eliminarDigitosRepetidos(n)*10+dig;
		}
	}
	return res;
}


